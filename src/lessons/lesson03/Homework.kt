package lessons.lesson03

class Homework {
    // 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
    val eventName: String = "Monster Hackaton"

    // 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var eventDate: String = "10 ноября 2025"

    // 3. Место проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var eventLocation: String = "ЦСК Арена"

    // 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован и утверждён и не должен изменяться)
    private val budget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

    // 5. Количество участников (публичная изменяемая переменная, на момент создания количество известно, но количество может быть
    // увеличено)
    var participantCount: Int = 354

    // 6. Длительность хакатона (публичная изменяемая переменная с
    // отложенной инициализацией, так как на момент создания длительность хакатона не известна)
    lateinit var durationHours: String

    // 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг (публичная неизменняеммая переменная,
    // условия соглашений не должны увидеть и условия не должны меняться)
    val sponsorContactList: String = "Контактная информация и условия соглашений с поставщиками"

    // 8. Текущее состояние хакатона (статус) (публичная изменяемая переменная с начальным статусом)
    var currentStatus: String = "Ожидание начала мероприятия"

    // 9. Список спонсоров (публичная неизменяемая переменная, тк список спонсоров утвержден заранее)
    val sponsorList: String = "Список спонсоров"

    // 10. Бюджет мероприятия (приватная неизменяемая переменная, считаем, что бюджет не меняется и не в публичном доступе)
    private val eventBudget: String = "Бюджет мероприятия"

    // 11. Текущий уровень доступа к интернету (публичная изменяемая переменная)
    var сurrentInternetAccessLevel: String = "Текущий уровень доступа к интернету"

    // 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки. (публичная изменяемая переменная
    // с отложенной инициализацией, так как на момент создания поставщик и график не известны)
    private var transportPlan: String = "план транспортировки оборудования"

    // 13. Количество команд (публичная неизменяемая переменная)
    val teamCount: Int = 45

    // 14. Перечень задач (публичная изменяемая переменная)
    var taskList: String = "Список задач"

    // 15. План эвакуации (публичная неизменяемая переменная, план известен заранее)
    val evacuationPlan: String ="План"

    // 16. Список доступного оборудования (всё, что выделено для использования на мероприятии)
    // (публичная неизменяемая переменная)
    val equipmentAvaibaleList: String = "Список оборудования"

    // 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками) (публичная изменяемая переменная
    // с инициализацией, так как на момент создания свободное оборудование считаем известным)
    var equipmentFreeList: String = "Свободное оборудование"

    // 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала) (публичная изменяемая переменная
    // с отложенной инициализацией, так как на момент создания поставщик и график не известны)
    lateinit var mealSchedule: String

    // 19. План мероприятий на случай сбоев (публичная изменяемая переменная
    // с инициализацией, считаем, что план известен)
    var eventBackupPlan: String = "План мероприятий на случай сбоев "

    // 20. Список экспертов и жюри (публичная изменяемая переменная с
    //  инициализацией, список жюри известен, но может меняться)
    var juryList: String = "Список жюри"

    // 21. Политика конфиденциальности (публичная неизменяемая переменная
    // Политика конфиденциальности доступна всем)
    val privacyPolicy: String = "Политика конфиденциальности"

    // 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем. (приватная изменяемая переменная с
    // отложенной инициализацией, так как на момент создания отзывов еще нет)
    private lateinit var participantFeedback: String

    // 23. Текущая температура в помещении(публичная изменяемая переменная с
    // отложенной инициализацией, так как на момент создания температура не известна)
    lateinit var currentTemperature: String

    // 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами(публичная изменяемая переменная с
    // отложенной инициализацией, так как на момент создания данные не известны)
    lateinit var networkPerformanceData: String

    // 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
    // (публичная изменяемая переменная с инициализацией)
    var internetSpeedFactor: Double = 0.5

    // 26. Уровень освещения(публичная изменяемая переменная с
    // отложенной инициализацией, так как на момент создания уровень освещения не известен)
    lateinit var lightLevel: String

    // 27. Лог событий мероприятия(публичная неизменяемая переменная с
    // инициализацией, так как на момент создания хронология событий известна)
    val eventLog: String = "События мероприятия"

    // 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)(публичная неизменяемая переменная)
    val medicalHelpAvailable: Boolean = true

    // 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций(приватная
    // не изменяемая переменная)
    private val safetyAndEmergencyProcedures: String = "Планы и процедуры для обеспечения безопасности мероприятия"

    // 30. Регистрационный номер мероприятия(публичная неизменяемая))
    val registrationNumber: String = "Регистрационный номер мероприятия"

    // 31. Максимально допустимый уровень шума в помещении хакатона.(публичная неизменяемая)
    val maxNoiseDbA: Int = 75

    // 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)(публичная изменяемая)
    var isNoiseExceeded: Boolean = false

    // 33. План взаимодействия с прессой(публичная изменяемая)
    val pressPlan: String = "План взаимодействия"

    // 34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.(публичная переменная с
    // ленивой инициализацией, так как инфа будет известна после завершения хакатона)
    val publicProjectsReport: String by lazy {
    // имитация ресурсоёмкой подготовки данных
        "Детальная публичная информация о проектах каждой команды"
    }

    // 35. Статус получения всех необходимых разрешений для проведения мероприятия (публичная изменяемая)
    var permitsStatus: String = "Статус разрешений"

    // 36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)(публичная изменяемая)
    var specialEquipmentAvailable: Boolean = true

    // 37. Список партнеров мероприятия (публичная неизменяемая)
    val partners: String = "Список партнеров мероприятия"

    // 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.(публичная
    //  переменная с отложенной инициализацией)
    lateinit var finalPublicReport: String

    // 39. Внутренние правила распределения призов(приватная неизменяемая)
    private val internalPrizeRules: String = "Внутренние правила распределения призов"

    // 40. Список разыгрываемых призов(публичная неизменяемая)
    val prizes: String = "Список разыгрываемых призов"

    // 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
    // (публичная не изменяемая переменная)
    private val emergencyContactsInternal: String = "Контактная информация экстренных служб"

    // 42. Особые условия для участников с ограниченными возможностями(публичная неизменяемая)
    val accessibilityNotes: String = "Особые условия для участников с ограниченными возможностями"

    // 43. Общее настроение участников (определяется опросами)(публичная изменяемая)
    var participantsMood: String = "Общее настроение участников"

    // 44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом
    // мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
    // (публичная неизменяемая переменная с отложенной инициализацией)
    lateinit var detailedPlanOfHackathon: String

    // 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
    // (публичная с отложенной инициализацией, анонс за день)
    lateinit var specialGuestName: String

    // 46. Максимальное количество людей, которое может вместить место проведения.(публичная изменяемая)
    val venueCapacity: Int = 600

    // 47. Количество часов, отведенное каждой команде для работы над проектом.(публичная неизменяемая)
    val hoursPerTeam: Int = 48
}